// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RentACarProject.Persistence.Context;

#nullable disable

namespace RentACarProject.Persistence.Migrations
{
    [DbContext(typeof(RentACarDbContext))]
    [Migration("20220909203659_mig_1")]
    partial class mig_1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RentACarProject.Domain.Entites.Arac", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BeygirGucu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Durum")
                        .HasColumnType("bit");

                    b.Property<string>("Marka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotorHacmi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plaka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("SaatUcreti")
                        .HasColumnType("real");

                    b.Property<Guid>("SubeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("VitesTuru")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubeId");

                    b.ToTable("Araclar");
                });

            modelBuilder.Entity("RentACarProject.Domain.Entites.Kullanici", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdresDetay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cadde")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Durum")
                        .HasColumnType("bit");

                    b.Property<string>("Sehir")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ulke")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kullanicilar");
                });

            modelBuilder.Entity("RentACarProject.Domain.Entites.KullaniciSiparis", b =>
                {
                    b.Property<Guid>("SiparisId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("KullaniciId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SiparisId", "KullaniciId");

                    b.HasIndex("KullaniciId");

                    b.ToTable("KullaniciSiparis");
                });

            modelBuilder.Entity("RentACarProject.Domain.Entites.Siparis", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AlisZamani")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("AracId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Durum")
                        .HasColumnType("bit");

                    b.Property<Guid>("SubeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TeslimSubeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("TeslimZamani")
                        .HasColumnType("datetime2");

                    b.Property<float>("ToplamUcret")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("AracId");

                    b.HasIndex("SubeId");

                    b.ToTable("Siparisler");
                });

            modelBuilder.Entity("RentACarProject.Domain.Entites.Sube", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdresDetay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cadde")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sehir")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubeAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ulke")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subeler");
                });

            modelBuilder.Entity("RentACarProject.Domain.Entites.Arac", b =>
                {
                    b.HasOne("RentACarProject.Domain.Entites.Sube", "Sube")
                        .WithMany("Araclar")
                        .HasForeignKey("SubeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Sube");
                });

            modelBuilder.Entity("RentACarProject.Domain.Entites.KullaniciSiparis", b =>
                {
                    b.HasOne("RentACarProject.Domain.Entites.Kullanici", "Kullanici")
                        .WithMany("KullaniciSiparis")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RentACarProject.Domain.Entites.Siparis", "Siparis")
                        .WithMany("KullaniciSiparis")
                        .HasForeignKey("SiparisId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Kullanici");

                    b.Navigation("Siparis");
                });

            modelBuilder.Entity("RentACarProject.Domain.Entites.Siparis", b =>
                {
                    b.HasOne("RentACarProject.Domain.Entites.Arac", "Arac")
                        .WithMany("Siparisler")
                        .HasForeignKey("AracId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RentACarProject.Domain.Entites.Sube", "Sube")
                        .WithMany("Siparisler")
                        .HasForeignKey("SubeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Arac");

                    b.Navigation("Sube");
                });

            modelBuilder.Entity("RentACarProject.Domain.Entites.Arac", b =>
                {
                    b.Navigation("Siparisler");
                });

            modelBuilder.Entity("RentACarProject.Domain.Entites.Kullanici", b =>
                {
                    b.Navigation("KullaniciSiparis");
                });

            modelBuilder.Entity("RentACarProject.Domain.Entites.Siparis", b =>
                {
                    b.Navigation("KullaniciSiparis");
                });

            modelBuilder.Entity("RentACarProject.Domain.Entites.Sube", b =>
                {
                    b.Navigation("Araclar");

                    b.Navigation("Siparisler");
                });
#pragma warning restore 612, 618
        }
    }
}
